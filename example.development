###
# Ruby 'development' configuration file (.development).
#
# * # denotes comment.
# * Indentation is treated as a line continuation.
# * Items can be separated by , or simply by whitespace.
# * Length of whitespace is irrelevant - contiguous whitespace is "one unit".
#

###
# Any lines beginning with plain text (not =, +, -, @, !) will be interpreted as general directory expressions.
# It is not necessary to specify any general directories. Multiple directories may be specified, one per line.
#
# Uncomment the line below to look for directories with gem name in ~/ruby_projects. Any directories specified
# in this way will be used in the case that no explicit specification exists for gem name in question.
#
# ~/ruby_projects

###
# Declare a gemset to group a set of gems and configure them by a single reference.
#
# Gems are permitted to be in multiple sets, with first match (from top of .development file downward) winning.
#
# =<gemset_name> gem-name, ...
#

=ruby                 module-cluster

=hooked_objects       hash-hooked 
                      array-hooked 
                      array-sorted 
                      array-unique 
                      array-sorted-unique

=compositing_objects  hash-compositing
                      array-compositing
                      array-sorted-compositing
                      array-unique-compositing
                      array-sorted-unique-compositing

=ridiculous_power     persistence
                      magnets

###
# Declare named locations to associate gems or gemsets with specific locations.
#
# +directory_name path, ...
#
# Paths that begin with @ will interpolate the directory name as the starting portion of the path.
#

+code                 ~/Projects
+ridiculous_power     @code/rp
+ruby                 @ridiculous_power/ruby

+hooked_objects       @ruby/hooked_objects
+compositing_objects  @ruby/compositing_objects

###
# Declare lookup locations for specific gems.
#
# Named paths listed on there own 
#

@hooked_objects       hooked_objects
@compositing_objects  compositing_objects

@ridiculous_power     ridiculous_power

###
# !enable and !disable can be used to cause production gems to be used.
# 
# * !enable or !disable on its own will enable or disable all gems and change the default (enabled/disabled), 
#   after which individual gems can be enabled or disabled.
#
# * !enable or !disable followed by a gem name or a gemset name will enable or disable that gem/gemset.
#
# Nothing is enabled to start. Call !enable to use .development specifications in all cases; after
# !enable individual gems/sets/paths can be enabled/disabled.
#

!enable 
